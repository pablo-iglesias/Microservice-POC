/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.3/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // The production code uses Guava
    compile 'com.google.guava:guava:20.0'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
    
    // Use Sqlite
    compile 'org.xerial:sqlite-jdbc:3.7.2'
    
    // Use Jtwig
    compile "org.jtwig:jtwig-core:5.75"
    
    // Additional dependence for preventing a little problem
    compile "org.slf4j:slf4j-jdk14:1.7.12"
    
    // Library for working with named regular expression groups
    compile "com.github.tony19:named-regexp:0.2.4"
}


// Define the main class for the application
mainClassName = 'App'

jar {
  manifest {
    attributes(
      'Main-Class': 'App',
      'Class-Path': 'libs/asm-5.0.3.jar libs/asm-analysis-5.0.3.jar libs/asm-tree-5.0.3.jar libs/asm-util-5.0.3.jar libs/commons-lang3-3.1.jar libs/concurrentlinkedhashmap-lru-1.4.2.jar libs/guava-20.0.jar libs/jtwig-core-5.75.jar libs/jtwig-reflection-1.21.jar libs/parboiled-core-1.1.7.jar libs/parboiled-java-1.1.7.jar libs/slf4j-api-1.7.12.jar libs/sqlite-jdbc-3.7.2.jar libs/slf4j-jdk14-1.7.12.jar libs/named-regexp-0.2.4.jar'
    )
  }
  from('templates') {
      include  '**/*.html'
      into 'templates'
  }
  from('sql') {
      include  '**/*.sql'
      into 'sql'
  }
}

// Copy jar file to the jar folder and all runtime dependencies to the libs subfolder
task deployJar(type: Copy) {
	into "$buildDir/jar"
    from jar.archivePath
}
task deployDependencies(type: Copy) {
    into "$buildDir/jar/libs"
    from configurations.runtime
}


jar.finalizedBy([deployJar, deployDependencies])

